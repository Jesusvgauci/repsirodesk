package ui

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalClipboardManager
import androidx.compose.ui.text.AnnotatedString
import androidx.compose.ui.unit.dp
import calculators.calculateCAT
import kotlinx.coroutines.launch

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun CATScreen() {
    val questions = listOf(
        "Ka≈°eƒæ",
        "Vyka≈°liavanie hlienu",
        "Tlak na hrudn√≠ku",
        "D√Ωchaviƒçnos≈• pri ch√¥dzi do kopca / po schodoch",
        "Obmedzenie aktiv√≠t doma",
        "Istota pri odchode z domu",
        "Kvalita sp√°nku",
        "Energia"
    )

    val answers = remember { mutableStateListOf(*Array(8) { 0 }) }
    var resultText by remember { mutableStateOf("") }

    val clipboardManager = LocalClipboardManager.current
    val snackbarHostState = remember { SnackbarHostState() }
    val scope = rememberCoroutineScope()

    Scaffold(
        snackbarHost = { SnackbarHost(snackbarHostState) }
    ) { innerPadding ->
        Column(
            modifier = Modifier
                .fillMaxSize()
                .verticalScroll(rememberScrollState())
                .padding(innerPadding)
                .padding(16.dp),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            // InfoCard ost√°va podƒæa p√¥vodn√©ho k√≥du
            InfoCard(
                text = "COPD Assessment Test (CAT) je jednoduch√Ω dotazn√≠k urƒçen√Ω na pos√∫denie z√°va≈ænosti sympt√≥mov CHOCHP. " +
                        "Sk√≥re 0‚Äì10 = n√≠zke sympt√≥my, 11‚Äì20 = stredn√©, 21‚Äì30 = vysok√©, 31‚Äì40 = veƒæmi vysok√©."
            )

            Spacer(modifier = Modifier.height(16.dp))

            questions.forEachIndexed { index, question ->
                Column {
                    Text(question, style = MaterialTheme.typography.bodyLarge)
                    Slider(
                        value = answers[index].toFloat(),
                        onValueChange = { answers[index] = it.toInt() },
                        valueRange = 0f..5f,
                        steps = 4
                    )
                    Text("Hodnota: ${answers[index]}")
                }
                Spacer(modifier = Modifier.height(8.dp))
            }

            Button(
                onClick = {
                    val score = calculateCAT(answers) // üîπ sp√§≈• na p√¥vodn√Ω n√°zov
                    resultText = "CAT sk√≥re: $score"
                },
                modifier = Modifier.fillMaxWidth()
            ) {
                Text("Vyhodnoti≈•")
            }

            // V√Ωsledok cez ResultCard (jedin√° UI zmena)
            if (resultText.isNotEmpty()) {
                ResultCard(
                    text = resultText,
                    onCopy = { copied ->
                        clipboardManager.setText(AnnotatedString(copied))
                        scope.launch {
                            snackbarHostState.showSnackbar("Skop√≠rovan√© do schr√°nky")
                        }
                    }
                )
            }
        }
    }
}
