package ui

import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import calculators.calculateSpO2FiO2

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun OxygenationScreen() {
    var spo2 by remember { mutableStateOf("") }
    var fio2 by remember { mutableStateOf("") }
    var result by remember { mutableStateOf<String?>(null) }

    Scaffold { innerPadding ->
        ScrollableScreen(modifier = Modifier.padding(innerPadding)) {

            // üü¶ InfoCard ‚Äì struƒçn√© vysvetlenie
            InfoCard(
                "Pomer SpO‚ÇÇ/FiO‚ÇÇ je jednoduch√Ω ukazovateƒæ oxygen√°cie, ktor√Ω m√¥≈æe sl√∫≈æi≈• ako n√°hrada za PaO‚ÇÇ/FiO‚ÇÇ, " +
                        "najm√§ ak nie je k dispoz√≠cii arteri√°lny krvn√Ω plyn. Ni≈æ≈°ie hodnoty znamenaj√∫ hor≈°iu oxygen√°ciu."
            )

            Spacer(Modifier.height(16.dp))

            OutlinedTextField(
                value = spo2,
                onValueChange = { spo2 = it },
                label = { Text("SpO‚ÇÇ (%)") },
                modifier = Modifier.fillMaxWidth()
            )
            OutlinedTextField(
                value = fio2,
                onValueChange = { fio2 = it },
                label = { Text("FiO‚ÇÇ (0‚Äì1.0)") },
                modifier = Modifier.fillMaxWidth()
            )

            Spacer(Modifier.height(12.dp))

            Button(
                onClick = {
                    val res = calculateSpO2FiO2(
                        spo2.toIntOrNull() ?: 95,
                        fio2.toDoubleOrNull() ?: 0.21
                    )
                    result = "SpO‚ÇÇ/FiO‚ÇÇ = ${"%.1f".format(res.ratio)} ‚Ä¢ ${res.interpretation}"
                },
                modifier = Modifier.fillMaxWidth()
            ) {
                Text("Vyhodnoti≈•")
            }

            // üü¶ V√Ωsledok v modrom boxe
            result?.let {
                Spacer(Modifier.height(16.dp))
                Surface(
                    tonalElevation = 2.dp,
                    shape = MaterialTheme.shapes.medium,
                    color = MaterialTheme.colorScheme.primaryContainer,
                    modifier = Modifier.fillMaxWidth()
                ) {
                    Text(
                        text = it,
                        style = MaterialTheme.typography.titleMedium,
                        color = MaterialTheme.colorScheme.onPrimaryContainer,
                        modifier = Modifier.padding(16.dp)
                    )
                }
            }
        }
    }
}
